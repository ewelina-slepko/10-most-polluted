{"version":3,"sources":["components/images/industrial.jpg","components/Header.jsx","components/Info.jsx","components/Dashboard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","background","display","alignItems","justifyContent","height","backgroundImage","Background","backgroundSize","opacity","backgroundMobile","backgroundPosition","header","flex","margin","textTransform","color","letterSpacing","textAlign","maxWidth","borderRadius","fontFamily","headerMargin","headerText","fontSize","text","Header","classes","className","window","innerWidth","clsx","container","wrapper","flexWrap","paddingBottom","wrapperMargin","padding","backgroundColor","whiteSpace","city","Info","cities","map","info","i","key","value","parameter","textField","marginLeft","spacing","marginRight","btnWrapper","marginTop","dense","menu","width","Dashboard","shortcut","React","useState","setCities","country","setCountry","onSubmit","e","preventDefault","fetch","then","response","json","results","noValidate","TextField","id","select","label","onChange","event","target","SelectProps","native","MenuProps","helperText","variant","option","Button","style","btnPosition","type","arr","length","s","keys","filter","Set","o","k","has","add","join","splice","sortCities","console","log","App","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ee178e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/industrial.5ca31ff2.jpg\";","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Background from '../components/images/industrial.jpg'\r\nimport clsx from 'clsx'\r\n\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={window.innerWidth < 992 ? clsx(classes.background, classes.backgroundMobile) : classes.background}>\r\n            <div className={window.innerWidth < 992 ? classes.header : clsx(classes.header, classes.headerMargin)}>\r\n                <h1 className={classes.headerText}>Air Pollution</h1>\r\n                <h2 className={classes.text}>The most polutted cities in the country</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n    background: {\r\n        display: 'flex',\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'space-around',\r\n        height: '100vh',\r\n        backgroundImage: `url(${Background})`,\r\n        backgroundSize: 'cover',\r\n        opacity: '0.8'\r\n    },\r\n    backgroundMobile: {\r\n        backgroundPosition: '-200px'\r\n    },\r\n    header: {\r\n        flex: 1,\r\n        margin: '20px',\r\n        textTransform: 'uppercase',\r\n        color: '#fff',\r\n        letterSpacing: 1,\r\n        textAlign: 'center',\r\n        maxWidth: 500,\r\n        borderRadius: 3,\r\n        fontFamily: 'Montserrat, sans-serif'\r\n    },\r\n    headerMargin: {\r\n        margin: '80px',\r\n    },\r\n    headerText: {\r\n        fontSize: '2.6rem',\r\n        margin: 0\r\n    },\r\n    text: {\r\n        fontSize: '.8rem'\r\n    }\r\n\r\n}));\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\n\r\nconst Info = ({ cities }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <div className={classes.container}>\r\n                <div className={window.innerWidth > 992 ? clsx(classes.wrapper, classes.wrapperMargin) : classes.wrapper}>\r\n                    {cities.map((info, i) => {\r\n                        return (\r\n                            <p key={info.city} className={classes.text}>\r\n                                <span className={classes.city}>{info.city}:</span> {info.value} {info.parameter}\r\n                            </p>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        margin: 20,\r\n        justifyContent: 'center',\r\n    },\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        color: '#4d4d4d',\r\n        paddingBottom: 60\r\n    },\r\n    wrapperMargin: {\r\n        margin: '20px 300px'\r\n    },\r\n    text: {\r\n        flex: 1,\r\n        padding: '20px 10px',\r\n        margin: '10px',\r\n        backgroundColor: '#edf1fa',\r\n        borderRadius: 20,\r\n        whiteSpace: 'nowrap',\r\n        maxWidth: 270\r\n    },\r\n    city: {\r\n        fontSize: '1.4rem',\r\n        padding: '4px 6px'\r\n    }\r\n\r\n}));\r\n\r\nexport default Info;\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Info from './Info'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst Dashboard = () => {\r\n    const [cities, setCities] = React.useState([]);\r\n\r\n    const [country, setCountry] = React.useState('');\r\n\r\n    const getInfo = shortcut => (e) => {\r\n        e.preventDefault();\r\n        fetch(`https://api.openaq.org/v1/measurements?country=${shortcut}&parameter=pm25&order_by=value&sort=desc&limit=10000`)\r\n            .then(response => response.json())\r\n            .then(json => setCities(json.results));\r\n    }\r\n\r\n    const sortCities = () => {\r\n        let arr = []\r\n        cities.length > 0 &&\r\n            (arr = cities.map((info, i) => {\r\n                return ({\r\n                    'city': info.city, 'value': info.value, 'parameter': info.parameter\r\n                })\r\n            }))\r\n        const keys = ['city']\r\n        const filtered = arr.filter(\r\n            (s => o =>\r\n                (k => !s.has(k) && s.add(k))(keys.map(k => o[k]).join('|'))\r\n            )(new Set())\r\n        );\r\n        return filtered.splice(0, 10)\r\n    }\r\n\r\n    const handleChange = event => {\r\n        setCountry(event.target.value);\r\n        // getInfo(event.target.value)\r\n    };\r\n\r\n    const classes = useStyles();\r\n    const countries = [\r\n        {\r\n            value: '',\r\n            label: '',\r\n        },\r\n        {\r\n            value: 'BE',\r\n            label: 'Belgium',\r\n        },\r\n        {\r\n            value: 'BA',\r\n            label: 'Bosnia and Herzegovina',\r\n        },\r\n        {\r\n            value: 'HR',\r\n            label: 'Croatia',\r\n        },\r\n        {\r\n            value: 'CZ',\r\n            label: 'Czechia',\r\n        },\r\n        {\r\n            value: 'FI',\r\n            label: 'Finland',\r\n        },\r\n        {\r\n            value: 'FR',\r\n            label: 'France',\r\n        },\r\n        {\r\n            value: 'DE',\r\n            label: 'Germany',\r\n        },\r\n        {\r\n            value: 'HU',\r\n            label: 'Hungary',\r\n        },\r\n        {\r\n            value: 'IE',\r\n            label: 'Ireland',\r\n        },\r\n        {\r\n            value: 'IT',\r\n            label: 'Italy',\r\n        },\r\n        {\r\n            value: 'XK',\r\n            label: 'Kosowo',\r\n        },\r\n        {\r\n            value: 'LT',\r\n            label: 'Lithuania',\r\n        },\r\n        {\r\n            value: 'LU',\r\n            label: 'Luxembourg',\r\n        },\r\n        {\r\n            value: 'MK',\r\n            label: 'North Macedonia',\r\n        },\r\n        {\r\n            value: 'MT',\r\n            label: 'Malta',\r\n        },\r\n        {\r\n            value: 'NO',\r\n            label: 'Norway',\r\n        },\r\n        {\r\n            value: 'PL',\r\n            label: 'Poland',\r\n        },\r\n        {\r\n            value: 'PT',\r\n            label: 'Portugal',\r\n        },\r\n        {\r\n            value: 'RS',\r\n            label: 'Serbia',\r\n        },\r\n        {\r\n            value: 'SK',\r\n            label: 'Slovakia',\r\n        },\r\n        {\r\n            value: 'ES',\r\n            label: 'Spain',\r\n        },\r\n        {\r\n            value: 'CH',\r\n            label: 'Switzerland',\r\n        },\r\n        {\r\n            value: 'GB',\r\n            label: 'Great Britain',\r\n        },\r\n    ]\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className={classes.container}>\r\n                <form className={classes.container} onSubmit={getInfo(country)} noValidate>\r\n                    <TextField\r\n                        id=\"outlined-select-currency-native\"\r\n                        select\r\n                        label=\"Select\"\r\n                        className={classes.textField}\r\n                        value={country}\r\n                        onChange={handleChange}\r\n                        SelectProps={{\r\n                            native: true,\r\n                            MenuProps: {\r\n                                className: classes.menu,\r\n                            },\r\n                        }}\r\n                        helperText=\"Please select country\"\r\n                        margin=\"normal\"\r\n                        variant=\"outlined\"\r\n                    >\r\n                        {countries.map(option => (\r\n                            <option key={option.value} value={option.value}>\r\n                                {option.label}\r\n                            </option>\r\n                        ))}\r\n                    </TextField>\r\n                    <div className={classes.btnWrapper}>\r\n                        <Button\r\n                            style={{\r\n                                backgroundColor: \"#0d4ea8\",\r\n                            }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.btnPosition}\r\n                            type=\"submit\"\r\n                            label=\"Select\"\r\n\r\n                        >\r\n                            Sumbit\r\n                    </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <Info cities={sortCities()} />\r\n            {console.log(country)}\r\n        </>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: 10\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    btnWrapper: {\r\n        marginTop: 20\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\nimport Dashboard from './components/Dashboard'\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <>\n        <Dashboard />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  window.location.hostname === '[::1]' ||\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl)\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}